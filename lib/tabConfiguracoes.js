// Generated by CoffeeScript 1.9.2
(function() {
  var Popup, TabConfiguracoes;

  Popup = require('./bspopup').Popup;

  TabConfiguracoes = (function() {
    function TabConfiguracoes(config, dados) {
      this.dados = dados;
      this.config = config;
      this.idUrlOSM = config.container_id + '-urlosm';
      this.idClusterizar = this.config.container_id + '-clusterizar';
      this.idEsconderIcones = this.config.container_id + '-esconder-icones';
      this.idVerMais = this.config.container_id + '-ver-mais';
      this.idUseBsPopup = this.config.container_id + '-use-popup';
      this.idUrlSLS = config.container_id + '-urlsls';
      this.idUsuario = config.container_id + '-usuario';
      this.idPassword = config.container_id + '-password';
      this.containerQR = this.config.container_id + '-qrcode';
      this.idUsarCache = this.config.container_id + '-usarcache';
      this.render();
      this.onLoginLogout();
    }

    TabConfiguracoes.prototype.onLoginLogout = function() {
      if (this.dados.api.user.isLogged()) {
        $("#" + this.config.container_id + " .form-login").show();
        $("#" + this.config.container_id + " .form-logout").hide();
        return $("#" + this.config.container_id + " .form-login .user").html(this.dados.api.user.getUsuario());
      } else {
        $("#" + this.config.container_id + " .form-logout").show();
        return $("#" + this.config.container_id + " .form-login").hide();
      }
    };

    TabConfiguracoes.prototype.onQRCodeClick = function() {
      return this.showQRcode(this.dados.api.mashup.id);
    };

    TabConfiguracoes.prototype.showQRcode = function(mashupid) {
      var popup, url;
      popup = Popup.getIS(this.config);
      popup.setTitle("<p  style='padding:0px;margin:0px;text-align:center'>QR code para o aplicativo Searchlight Collector</p>");
      popup.setBody("<br><div style='width:300px;margin:0px auto;' id='" + this.containerQR + "' > </div><br><p style='text-align:center'> Abra o aplicativo Searchlight Collector e escolha a opção 'Escolher serviço de coleta'. Clique em 'vincular serviço' e posicione o smartphone adequadamente para ler o código QR acima.</p>");
      popup.show();
      url = "http://sl.wancharle.com.br/mashup/" + mashupid + "/";
      return $("#" + this.containerQR).empty().qrcode({
        width: 300,
        height: 300,
        mode: 0,
        'text': url
      });
    };

    TabConfiguracoes.prototype.onSalvar = function() {
      var newconf, searchlight, sl;
      sl = SL("map-" + this.config.container_id);
      $("#" + this.config.container_id).off();
      $("#" + this.config.container_id + " * ").off();
      sl.markers.off();
      sl.map.off();
      sl.markers.clearLayers();
      sl.map.remove();
      newconf = this.config.apiconf.toJSON();
      newconf.namespace = Math.random();
      return searchlight = new Searchlight(newconf);
    };

    TabConfiguracoes.prototype.bind = function() {
      var self;
      self = this;
      $("#" + this.idClusterizar).on('change', function(ev) {
        return self.config.clusterizar = this.checked;
      });
      $("#" + this.idEsconderIcones).on('change', function(ev) {
        return self.config.esconder_icones = this.checked;
      });
      $("#" + this.idVerMais).on('change', function(ev) {
        return self.config.ver_mais = this.checked;
      });
      $("#" + this.idUseBsPopup).on('change', function(ev) {
        return self.config.useBsPopup = this.checked;
      });
      $("#" + this.idUrlOSM).on('change', function(ev) {
        return self.config.urlosm = $(this).val();
      });
      $("#" + this.config.configuracoes_id + " button.searchlight-btn-qrcodigo").on('click', function(ev) {
        return self.onQRCodeClick();
      });
      return $("#" + this.config.configuracoes_id + " button.searchlight-btn-salvar").on('click', function(ev) {
        return self.onSalvar(ev);
      });
    };

    TabConfiguracoes.prototype.render = function() {
      var html;
      html = "<form > <br/> <fieldset> <legend>Mashup</legend> <p>" + this.dados.api.mashup.title + " <a class='' target='_blank' href='http://sl.wancharle.com.br/mashup/edit/?id=" + this.dados.api.mashup.id + "'><span class='glyphicon glyphicon-edit'></span> Editar Mashup</a> </p> <button type='button' class='btn btn-default searchlight-btn-compartilhar'>Compartilhar</button> <button type='button' class='btn btn-default searchlight-btn-qrcodigo'>Vincular com Searchlight Mobile</button> </fieldset> <br> <fieldset> <legend>Mapa</legend> <div class='form-group'> <label for='urlosm'>Servidor Open Street Map</label> <input type='url' class='form-control' value='" + this.config.urlosm + "' id='" + this.idUrlOSM + "' placeholder='informe uma url do tipo OSM'> </div> <div class='checkbox'> <label> <input type='checkbox' " + (this.config.clusterizar ? "checked" : "") + " id='" + this.idClusterizar + "'> Agrupar marcadores </label> </div> <div class='checkbox'> <label> <input type='checkbox' " + (this.config.esconder_icones ? "checked" : "") + " id='" + this.idEsconderIcones + "'> Esconder ícones nos níveis de zoom superiores </label> </div> <div class='checkbox'> <label> <input type='checkbox' " + (this.config.ver_mais ? "checked" : "") + " id='" + this.idVerMais + "'> Opção 'ver mais' nos popups dos marcadores </label> </div> <div class='checkbox'> <label> <input type='checkbox' " + (this.config.useBsPopup ? "checked" : "") + " id='" + this.idUseBsPopup + "'> Agrupamento exibe popup do grupo de forma modal </label> </div> </fieldset> <br> <fieldset> <legend> </legend> <button type='button' class='btn btn-default searchlight-btn-salvar'>Aplicar</button> </fieldset> </form>";
      $("#" + this.config.configuracoes_id).html(html);
      return this.bind();
    };

    return TabConfiguracoes;

  })();

  module.exports = {
    TabConfiguracoes: TabConfiguracoes
  };

}).call(this);
