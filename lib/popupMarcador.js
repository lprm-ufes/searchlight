// Generated by CoffeeScript 1.9.2
(function() {
  var Controle, Dados, ListaFilhos, Popup, PopupMarcador;

  Dados = require('./dados').Dados;

  Popup = require('./bspopup').Popup;

  Controle = require('./controle').Controle;

  ListaFilhos = (function() {
    function ListaFilhos(marcador_pai) {
      this.dados = Dados.getIS(marcador_pai.config);
      this.filhos = this.dados.getFilhos(marcador_pai.id);
    }

    ListaFilhos.prototype.getHTML = function() {
      var f, html, i, j, len, ref;
      if (this.filhos.length > 0) {
        html = '<hr/><h4>Anotações relacionadas</h4><div class="panel-group" id="accordion" role="tablist" aria-multiselectable="true">';
        ref = this.filhos;
        for (i = j = 0, len = ref.length; j < len; i = ++j) {
          f = ref[i];
          html += '<div class="panel panel-default"> <div class="panel-heading" role="tab" id="heading' + i + '"> <h4 class="panel-title"><a data-toggle="collapse" data-parent="#accordion" href="#collapse' + i + '" aria-expanded="true" aria-controls="collapse' + i + '">';
          html += (f.title || f.user.username) + "</a></h4></div>";
          html += ' <div id="collapse' + i + '" class="panel-collapse collapse ' + (i < 1 ? 'in' : void 0) + '" role="tabpanel" aria-labelledby="heading' + i + '"> <div class="panel-body">' + ((f.texto || f.comentarios) + "</div> </div> </div>");
        }
        html += '</div>';
        return html;
      } else {
        return "";
      }
    };

    return ListaFilhos;

  })();

  PopupMarcador = (function() {
    function PopupMarcador() {}

    PopupMarcador.show = function(map_id) {
      var config, m, popup, sl;
      sl = SL(map_id);
      config = sl.config;
      popup = Popup.getIS(config);
      m = Controle.getIS(config).ultimo_marcador_clicado.slinfo;
      if (Searchlight.debug) {
        console.log(m);
      }
      if (m.title) {
        popup.setTitle(m.title);
      } else {
        popup.setTitle("");
      }
      if (!m.listaFilhos) {
        m.listaFilhos = new ListaFilhos(m);
      }
      popup.setBody(m.texto + m.listaFilhos.getHTML());
      return popup.show();
    };

    return PopupMarcador;

  })();

  module.exports = {
    PopupMarcador: PopupMarcador
  };

}).call(this);
