// Generated by CoffeeScript 1.9.2
(function() {
  var BIBLIOTECA, CEMUNI, CT, Config, Controle, Dados, Marcador, Popup, SENADO_FEDERAL, Searchlight, TabConfiguracoes, TabList, UFES, attribution, referencia_atual, sl_referencias,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  Dados = require('./dados').Dados;

  Config = require('./config').Config;

  Marcador = require('./marcador').Marcador;

  Controle = require('./controle').Controle;

  TabList = require('./lista').TabList;

  TabConfiguracoes = require('./tabConfiguracoes').TabConfiguracoes;

  Popup = require('./bspopup').Popup;

  L.Icon.Default.imagePath = "images/leaflet";

  SENADO_FEDERAL = [-15.799088, -47.865350];

  UFES = [-20.277233, -40.303752];

  CT = [-20.273530, -40.305448];

  CEMUNI = [-20.279483, -40.302690];

  BIBLIOTECA = [-20.276519, -40.304503];

  attribution = 'Map generated by <a href="http://wancharle.github.com/Searchlight">Searchlight</a>,  Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a>';

  L.Icon.Default.imagePath = "/sl/images/leaflet";

  window.SL_ICON_CLUSTER = new L.DivIcon({
    html: '<div><span>1</span></div>',
    className: 'marker-cluster marker-cluster-small',
    iconSize: [40, 40],
    popupAnchor: [0, -35]
  });

  window.SL_ICON_PADRAO = new L.Icon.Default();

  referencia_atual = null;

  sl_referencias = {};

  window.SL = function(map_id) {
    "funcao global para pegar a referencia do objeto mapa";
    return sl_referencias[map_id];
  };

  Searchlight = (function() {
    function Searchlight(opcoes) {
      if (opcoes == null) {
        opcoes = {};
      }
      this.esconderCamadaMarkers = bind(this.esconderCamadaMarkers, this);
      this.mostrarCamadaMarkers = bind(this.mostrarCamadaMarkers, this);
      this.autoZoom = bind(this.autoZoom, this);
      this.create = bind(this.create, this);
      this.getIS = bind(this.getIS, this);
      this.config = new Config(opcoes);
      this.slsapi = new SLSAPI(opcoes);
      sl_referencias[this.config.map_id] = this;
      this.create();
      $('.collapse').collapse();
      this.dados = new Dados(this);
      this.tabList = new TabList(this.config);
      this.tabConfiguracoes = new TabConfiguracoes(this.config);
      this.dados.get_data();
    }

    Searchlight.prototype.getIS = function() {
      return "SL(\"" + this.config.map_id + "\")";
    };

    Searchlight.prototype.create = function() {
      $("#" + this.config.container_id).html("<ul class='nav nav-tabs' role='tablist'> <li class='active'><a data-toggle='tab' href='#" + this.config.tab_id + "'>Mapa</a></li> <li><a data-toggle='tab' href='#tab-" + this.config.lista_id + "'>Lista</a></li> <li><a data-toggle='tab' href='#tab-" + this.config.configuracoes_id + "'>Configurações</a></li> </ul> <div class='tab-content'> <div class='tab-pane active' id='" + this.config.tab_id + "'><div id='" + this.config.map_id + "' > </div> </div> <div class='tab-pane' id='tab-" + this.config.lista_id + "' ><div class='searchlight-tab' id='" + this.config.lista_id + "'> </div> </div> <div class='tab-pane' id='tab-" + this.config.configuracoes_id + "' ><div class='searchlight-tab' id='" + this.config.configuracoes_id + "'> </div> </div> </div> ");
      this.bsPopup = new Popup(this.config);
      this.CamadaBasica = L.tileLayer(this.config.urlosm, {
        'attribution': attribution,
        'maxZoom': 18
      });
      this.map = L.map(this.config.map_id, {
        layers: [this.CamadaBasica],
        'center': SENADO_FEDERAL,
        'zoom': 13
      });
      if (this.config.clusterizar) {
        this.markers = new L.MarkerClusterGroup({
          zoomToBoundsOnClick: false
        });
      } else {
        this.markers = new L.FeatureGroup();
      }
      this.map.addLayer(this.markers);
      this.control = new Controle(this);
      $("#" + this.config.container_id).on('dados:carregando', (function(_this) {
        return function() {
          return _this.map.spin(true);
        };
      })(this));
      return $("#" + this.config.container_id).on('dados:carregados', (function(_this) {
        return function() {
          _this.markers.clearLayers();
          _this.dados.addMarkersTo(_this.markers);
          _this.control.addCatsToControl(_this.config.map_id);
          _this.control.atualizarIconesMarcVisiveis();
          if (_this.map.getBoundsZoom(_this.markers.getBounds()) === _this.map.getZoom()) {
            _this.executandoZoomDeCarregamento = false;
          } else {
            _this.map.fitBounds(_this.markers.getBounds());
            _this.executandoZoomDeCarregamento = true;
          }
          _this.markers.fire("data:loaded");
          if (_this.executandoZoomDeCarregamento === false) {
            $("#" + _this.config.container_id).trigger('mapa:carregado');
          }
          return _this.autoZoom();
        };
      })(this));
    };

    Searchlight.prototype.autoZoom = function() {
      return this.map.fitBounds(this.markers.getBounds());
    };

    Searchlight.prototype.mostrarCamadaMarkers = function() {
      this.map.addLayer(this.markers);
      return this.map.setView(this.map_ultimo_center, this.map_ultimo_zoom);
    };

    Searchlight.prototype.esconderCamadaMarkers = function() {
      this.map.removeLayer(this.markers);
      this.map_ultimo_zoom = this.map.getZoom();
      return this.map_ultimo_center = this.map.getCenter();
    };

    return Searchlight;

  })();

  Searchlight.Popup = Popup;

  Searchlight.Marcador = Marcador;

  window.Searchlight = Searchlight;

}).call(this);
